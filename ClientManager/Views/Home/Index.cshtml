@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, ClientManager
 
@using ClientManager.Models
@model IndexViewModel

@*
    Index View:
    Displays a paginated, sorted, and filterable list of clients.
    Includes options to edit client details, edit addresses and delete clients.
    Uses Bootstrap for styling and tag helper for pagination.
*@

@* Include Bootstrap CSS for styling. *@
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />
 
@* Page title and filter form. *@
<h1>Clients list</h1>
<form method="get">
    <label>Filter Text: </label>
    <input name="filterText" value="@Model.FilterViewModel.SelectedText" />
    <input type="submit" value="Filter" />
</form>

@* Table to display the list of clients. *@
<table class="table">
    <thead>
        <tr>
            @* Column headers with sorting links. *@
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.FirstNameSort)"
                   asp-route-name="@(Model.FilterViewModel.SelectedText)">
                    First Name
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.LastNameSort)"
                   asp-route-name="@(Model.FilterViewModel.SelectedText)">
                    Last Name
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.EmailSort)"
                   asp-route-name="@(Model.FilterViewModel.SelectedText)">
                    Email
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.PhoneSort)"
                   asp-route-name="@(Model.FilterViewModel.SelectedText)">
                    Phone
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.AddressSort)"
                   asp-route-name="@(Model.FilterViewModel.SelectedText)">
                    Address
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.DescriptionSort)"
                   asp-route-name="@(Model.FilterViewModel.SelectedText)">
                    Description
                </a>
            </th>
        </tr>
    </thead>
    <tbody>
        @* Loop through the list of clients and display their details. *@
        @foreach (Client client in Model.Clients)
        {
            <tr>
                <td>@client.FirstName</td>
                <td>@client.LastName</td>
                <td>@client.Email</td>
                <td>@client.Phone</td>
                <td>@client.Address?.StreetAddress, @client.Address?.City, @client.Address?.State, @client.Address?.Zip</td>
                <td>@client.Description</td>
                <td>
                    @* Display "Edit Address" or "Edit Client" link based on the filter state. *@
                    @if (ViewBag.FilterApplied)
                    {
                        <a asp-action="EditAddress"
                           asp-controller="Home"
                           asp-route-id="@client.Id">
                            Edit Address
                        </a>
                    }
                    else
                    {
                        <a asp-action="EditClient"
                           asp-controller="Home"
                           asp-route-id="@client.Id">
                            Edit Client
                        </a>
                    }
                </td>
                <td>
                    @* Display "Delete" button if no filter is applied. *@
                    @if (!ViewBag.FilterApplied)
                    {
                        <form asp-controller="Home" asp-action="Delete" method="post" asp-route-id="@client.Id">
                            <input type="submit" value="Delete" />
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@* Pagination links using the custom PageLinkTagHelper. *@
<p>
    <page-link page-model="Model.PageViewModel" page-action="Index"
               page-url-name="@(Model.FilterViewModel.SelectedText)"
               page-url-sortorder="@(Model.SortViewModel.Current)"></page-link>
</p>